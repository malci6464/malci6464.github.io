{"version":3,"sources":["locations.js","goodies/ArcBrushingLayer.js","Map.js","App.js","index.js","App.module.css"],"names":["usa","longitude","latitude","zoom","pitch","bearing","boston","coolidge","ma","nyc","ArcBrushingLayer","Object","assign","get","getPrototypeOf","prototype","this","call","inject","vs:#decl","vs:#main-end","fs:#main-start","opts","coef","props","uniforms","ArcLayer","componentName","Map","_ref3","width","height","viewState","onViewStateChange","libraries","radius","arcsEnabled","librariesLine","React","useMemo","filter","d","state","length","lineString","map","position","undefined","libraryLinks","pairs","shuffle","slice","react_default","a","createElement","esm","renderprops","to","arcCoef","springProps","layers","ScatterplotLayer","id","data","getRadius","radiusMaxPixels","getFillColor","transitions","duration","easing","easeBackOut","pickable","onClick","info","console","log","object","autoHighlight","GeoJsonLayer","lineWidthMinPixels","getLineColor","getSourcePosition","getTargetPosition","getSourceColor","getTargetColor","getWidth","visible","dist_esm","App","_React$useState","useState","Locations","_React$useState2","slicedToArray","setViewState","_React$useState3","_React$useState4","setLibraries","useEffect","csv","then","_React$useState5","_React$useState6","setRadius","_React$useState7","_React$useState8","setArcsEnabled","_ref","className","styles","controls","Math","random","keys","key","destination","objectSpread","transitionDuration","transitionInterpolator","FlyToInterpolator","ReactDOM","render","src_App","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ec5776e9.chunk.js","sourcesContent":["export const usa = {\n  longitude: -98.12078906038815,\n  latitude: 39.07050154936433,\n  zoom: 3.847,\n  pitch: 41.8,\n  bearing: 0.7,\n};\n\nexport const boston = {\n  longitude: -71.091908,\n  latitude: 42.362419,\n  zoom: 12,\n  pitch: 47.5,\n  bearing: -1.45,\n};\n\nexport const coolidge = {\n  longitude: -71.121316,\n  latitude: 42.342492,\n  zoom: 12,\n  pitch: 0,\n  bearing: 0,\n};\n\nexport const ma = {\n  longitude: -71.84284514317822,\n  latitude: 42.16213680615227,\n  zoom: 7.5,\n  pitch: 0,\n  bearing: 0,\n};\n\nexport const nyc = {\n  longitude: -73.9544312807859,\n  latitude: 40.737897096399855,\n  zoom: 11,\n  pitch: 42.9,\n  bearing: 58.7,\n};\n","import { ArcLayer } from 'deck.gl';\n\n/**\n * https://github.com/uber/deck.gl/issues/2531\n */\nclass ArcBrushingLayer extends ArcLayer {\n  // custom shader with step function to create opacity gradient with colorA and colorB\n  // More at https://thebookofshaders.com/05/\n  getShaders() {\n    return Object.assign({}, super.getShaders(), {\n      // inject: https://github.com/uber/luma.gl/blob/master/docs/api-reference/shadertools/assemble-shaders.md\n      inject: {\n        'vs:#decl': `\n         uniform float coef;\n        `,\n        'vs:#main-end': `\n        if (coef > 0.0) {\n          vec4 pct = vec4(segmentRatio);\n          pct.a = step(coef, segmentRatio);\n          vec4 colorA = instanceSourceColors;\n          vec4 colorB = vec4(instanceTargetColors.r, instanceTargetColors.g, instanceTargetColors.b, 0.0);\n          vec4 color = mix(colorA, colorB, pct) / 255.;\n          vColor = color;\n        }\n                    `,\n        'fs:#main-start': `\n        if (vColor.a == 0.0) discard;\n                    `,\n      },\n    });\n  }\n\n  // overwrite draw fucntion\n  draw(opts) {\n    const { coef } = this.props;\n    // add uniforms\n    const uniforms = Object.assign({}, opts.uniforms, { coef });\n    super.draw(Object.assign({}, opts, { uniforms }));\n  }\n}\nArcBrushingLayer.componentName = 'ArcBrushingLayer';\n\nexport default ArcBrushingLayer;\n","import React from 'react';\nimport MapGL, { SVGOverlay } from 'react-map-gl';\nimport { DeckGL, ScatterplotLayer, GeoJsonLayer, ArcLayer } from 'deck.gl';\nimport { Spring } from 'react-spring/renderprops';\nimport Goo from './goodies/Goo';\nimport { easeBackOut, pairs, shuffle } from 'd3';\nimport { lineString } from '@turf/helpers';\n\nimport ArcBrushingLayer from './goodies/ArcBrushingLayer';\n\nfunction SvgOverlayExample({ libraries, radius }) {\n  const redraw = ({ project }) => {\n    return (\n      <g>\n        <Goo>\n          {libraries.map(lib => {\n            const [x, y] = project(lib.position);\n            return (\n              <circle key={lib.id} cx={x} cy={y} r={radius} fill=\"tomato\" />\n            );\n          })}\n        </Goo>\n      </g>\n    );\n  };\n  return <SVGOverlay redraw={redraw} />;\n}\n\nexport default function Map({\n  width,\n  height,\n  viewState,\n  onViewStateChange,\n  libraries,\n  radius,\n  arcsEnabled,\n}) {\n  const librariesMass = React.useMemo(\n    () => libraries.filter(d => d.state === 'MA'),\n    [libraries]\n  );\n\n  const librariesLine = React.useMemo(\n    () =>\n      libraries.length ? lineString(libraries.map(d => d.position)) : undefined,\n    [libraries]\n  );\n\n  const libraryLinks = React.useMemo(() => {\n    return pairs(shuffle(libraries.slice()).slice(0, 100));\n  }, [libraries]);\n\n  return (\n    <MapGL\n      width={width}\n      height={height}\n      viewState={viewState}\n      onViewStateChange={onViewStateChange}\n    >\n      <Spring to={{ arcCoef: arcsEnabled ? 1 : 1e-10 }}>\n        {springProps => {\n          const layers = [\n            new ScatterplotLayer({\n              id: 'scatterplot-layer',\n              data: libraries,\n              getRadius: 500 * radius,\n              radiusMaxPixels: 15,\n              getFillColor: [255, 99, 71],\n              transitions: {\n                getRadius: {\n                  duration: 1000,\n                  easing: easeBackOut,\n                },\n              },\n              pickable: true,\n              onClick: info => console.log(info.object),\n              autoHighlight: true,\n            }),\n            new GeoJsonLayer({\n              id: 'geojson-layer',\n              data: librariesLine,\n              lineWidthMinPixels: 1,\n              getLineColor: [0, 0, 0, 20],\n            }),\n\n            new ArcBrushingLayer({\n              id: 'arc-layer',\n              data: libraryLinks,\n              getSourcePosition: d => d[0].position,\n              getTargetPosition: d => d[1].position,\n              getSourceColor: [0, 255, 0],\n              getTargetColor: [0, 200, 200],\n              getWidth: 3,\n              visible: springProps.arcCoef > 1e-6,\n              coef: springProps.arcCoef,\n            }),\n          ];\n\n          return <DeckGL layers={layers} viewState={viewState} />;\n        }}\n      </Spring>\n      {/* <Spring from={{ radius: 0 }} to={{ radius }}>\n        {springProps => (\n          <SvgOverlayExample\n            libraries={librariesMass}\n            radius={springProps.radius}\n          />\n        )}\n        </Spring> */}\n    </MapGL>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.css';\nimport * as Locations from './locations';\nimport Map from './Map';\nimport { FlyToInterpolator } from 'react-map-gl';\nimport { csv } from 'd3';\n\nconst App = () => {\n  const [viewState, setViewState] = React.useState(Locations.usa);\n  const handleChangeViewState = ({ viewState }) => setViewState(viewState);\n  const handleFlyTo = destination =>\n    setViewState({\n      ...viewState,\n      ...destination,\n      transitionDuration: 2000,\n      transitionInterpolator: new FlyToInterpolator(),\n    });\n\n  const [libraries, setLibraries] = React.useState([]);\n  React.useEffect(() => {\n    csv('/data/public_libraries.csv', (d, id) => ({\n      id,\n      state: d['State'],\n      position: [+d['Longitude'], +d['Latitude']],\n    }))\n      .then(libraries =>\n        libraries.filter(d => d.position[0] != null && d.position[1] != null)\n      )\n      .then(setLibraries);\n  }, []);\n\n  const [radius, setRadius] = React.useState(15);\n  const handleToggleRadius = () =>\n    setRadius(radius > 0 ? 0 : Math.random() * 35 + 5);\n\n  const [arcsEnabled, setArcsEnabled] = React.useState(true);\n  const handleToggleArcs = () => setArcsEnabled(!arcsEnabled);\n\n  return (\n    <div>\n      <Map\n        width=\"100vw\"\n        height=\"100vh\"\n        viewState={viewState}\n        onViewStateChange={handleChangeViewState}\n        libraries={libraries}\n        radius={radius}\n        arcsEnabled={arcsEnabled}\n      />\n      <div className={styles.controls}>\n        <button onClick={handleToggleRadius}>Radius</button>\n        <button onClick={handleToggleArcs}>Arcs</button>\n        {Object.keys(Locations).map(key => (\n          <button key={key} onClick={() => handleFlyTo(Locations[key])}>\n            {key}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const App = require('./App').default;\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"App_controls__14oJX\"};"],"sourceRoot":""}